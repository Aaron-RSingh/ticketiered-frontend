{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/event.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default class Event extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      event: {},\n      tickets: [],\n      new_ticket_class: \"\",\n      new_description: \"\",\n      new_availability: \"\",\n      new_price: \"\",\n      update: false\n    };\n\n    this.fetchAllEventInfo = id => {\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events/\".concat(id), {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(res => {\n        // console.log(res);\n        this.setState({\n          event: res.event\n        });\n      });\n    };\n\n    this.handlechange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addNew = e => {\n      const id = this.props.id;\n      e.preventDefault();\n      const _this$state = this.state,\n            new_ticket_class = _this$state.new_ticket_class,\n            new_description = _this$state.new_description,\n            new_availability = _this$state.new_availability,\n            new_price = _this$state.new_price;\n      const token = localStorage.getItem(\"access_token\");\n      const self = this;\n      fetch(\"http://localhost:3000/events/\".concat(id, \"/tickets\"), {\n        method: \"post\",\n        body: JSON.stringify({\n          ticket_class: new_ticket_class,\n          description: new_description,\n          availability: new_availability,\n          price: new_price\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (response) {\n        self.setState({\n          new_ticket_class: \"\",\n          new_description: \"\",\n          new_availability: \"\",\n          new_price: \"\"\n        });\n        self.fetchAllEventInfo(id);\n      });\n    };\n\n    this.updateState = (e, id) => {\n      e.preventDefault();\n      const event = this.state.event;\n      const filterResult = event.tickets.filter(ticket => ticket.id === id);\n      this.setState({\n        new_price: filterResult[0].price,\n        new_availability: filterResult[0].availability,\n        new_description: filterResult[0].description,\n        new_ticket_class: filterResult[0].ticket_class,\n        update: true,\n        updateTicketId: filterResult[0].id\n      });\n    };\n\n    this.updateTicket = e => {\n      e.preventDefault();\n      const _this$state2 = this.state,\n            new_ticket_class = _this$state2.new_ticket_class,\n            new_description = _this$state2.new_description,\n            new_availability = _this$state2.new_availability,\n            new_price = _this$state2.new_price,\n            updateTicketId = _this$state2.updateTicketId;\n      const token = localStorage.getItem(\"access_token\");\n      const self = this;\n      fetch(\"http://localhost:3000/tickets/\".concat(updateTicketId), {\n        method: \"PUT\",\n        body: JSON.stringify({\n          ticket_class: new_ticket_class,\n          description: new_description,\n          availability: new_availability,\n          price: new_price\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (res) {\n        self.setState({\n          new_ticket_class: \"\",\n          new_description: \"\",\n          new_availability: \"\",\n          new_price: \"\",\n          update: false\n        });\n        self.fetchAllEventInfo(res.event_id);\n      });\n    };\n\n    this.deleteTicket = (e, id) => {\n      e.preventDefault();\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/tickets/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(res => {});\n      window.location.reload();\n    };\n\n    this.cancelUpdate = () => {\n      this.setState({\n        new_price: \"\",\n        new_availability: \"\",\n        new_description: \"\",\n        new_ticket_class: \"\",\n        update: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    const eventId = this.props.id;\n    this.fetchAllEventInfo(eventId);\n  }\n\n  render() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          imageurl = _this$props.imageurl,\n          description = _this$props.description,\n          id = _this$props.id,\n          location = _this$props.location,\n          isEdit = _this$props.isEdit,\n          datetime = _this$props.datetime;\n    const _this$state3 = this.state,\n          new_ticket_class = _this$state3.new_ticket_class,\n          new_description = _this$state3.new_description,\n          new_availability = _this$state3.new_availability,\n          new_price = _this$state3.new_price,\n          update = _this$state3.update;\n    const event = this.state.event;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Hi\");\n  }\n\n}","map":{"version":3,"sources":["/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/event.js"],"names":["React","Component","Link","Event","state","event","tickets","new_ticket_class","new_description","new_availability","new_price","update","fetchAllEventInfo","id","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","setState","handlechange","e","target","name","value","addNew","props","preventDefault","self","method","body","JSON","stringify","ticket_class","description","availability","price","response","updateState","filterResult","filter","ticket","updateTicketId","updateTicket","event_id","deleteTicket","window","location","reload","cancelUpdate","componentDidMount","eventId","render","imageurl","isEdit","datetime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CG,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,gBAAgB,EAAE,EAHZ;AAINC,MAAAA,eAAe,EAAE,EAJX;AAKNC,MAAAA,gBAAgB,EAAE,EALZ;AAMNC,MAAAA,SAAS,EAAE,EANL;AAONC,MAAAA,MAAM,EAAE;AAPF,KADmC;;AAAA,SAe3CC,iBAf2C,GAevBC,EAAE,IAAI;AACxB,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAC,MAAAA,KAAK,wCAAiCJ,EAAjC,GAAuC;AAC1CK,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL;AAAjB;AADiC,OAAvC,CAAL,CAGGM,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQC,GAAG,IAAI;AACX;AACA,aAAKE,QAAL,CAAc;AACZlB,UAAAA,KAAK,EAAEgB,GAAG,CAAChB;AADC,SAAd;AAGD,OATH;AAUD,KA3B0C;;AAAA,SA6B3CmB,YA7B2C,GA6B5BC,CAAC,IAAI;AAClB,WAAKF,QAAL,CAAc;AAAE,SAACE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,OAAd;AACD,KA/B0C;;AAAA,SAiC3CC,MAjC2C,GAiClCJ,CAAC,IAAI;AAAA,YACJZ,EADI,GACG,KAAKiB,KADR,CACJjB,EADI;AAEZY,MAAAA,CAAC,CAACM,cAAF;AAFY,0BAQR,KAAK3B,KARG;AAAA,YAIVG,gBAJU,eAIVA,gBAJU;AAAA,YAKVC,eALU,eAKVA,eALU;AAAA,YAMVC,gBANU,eAMVA,gBANU;AAAA,YAOVC,SAPU,eAOVA,SAPU;AASZ,YAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,YAAMgB,IAAI,GAAG,IAAb;AACAf,MAAAA,KAAK,wCAAiCJ,EAAjC,eAA+C;AAClDoB,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,YAAY,EAAE9B,gBADK;AAEnB+B,UAAAA,WAAW,EAAE9B,eAFM;AAGnB+B,UAAAA,YAAY,EAAE9B,gBAHK;AAInB+B,UAAAA,KAAK,EAAE9B;AAJY,SAAf,CAF4C;AAQlDQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL,KAAjB;AAAwB,0BAAgB;AAAxC;AARyC,OAA/C,CAAL,CAUGM,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAWQ,UAASqB,QAAT,EAAmB;AACvBT,QAAAA,IAAI,CAACT,QAAL,CAAc;AACZhB,UAAAA,gBAAgB,EAAE,EADN;AAEZC,UAAAA,eAAe,EAAE,EAFL;AAGZC,UAAAA,gBAAgB,EAAE,EAHN;AAIZC,UAAAA,SAAS,EAAE;AAJC,SAAd;AAMAsB,QAAAA,IAAI,CAACpB,iBAAL,CAAuBC,EAAvB;AACD,OAnBH;AAoBD,KAhE0C;;AAAA,SAkE3C6B,WAlE2C,GAkE7B,CAACjB,CAAD,EAAIZ,EAAJ,KAAW;AACvBY,MAAAA,CAAC,CAACM,cAAF;AADuB,YAEf1B,KAFe,GAEL,KAAKD,KAFA,CAEfC,KAFe;AAGvB,YAAMsC,YAAY,GAAGtC,KAAK,CAACC,OAAN,CAAcsC,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAAChC,EAAP,KAAcA,EAA7C,CAArB;AACA,WAAKU,QAAL,CAAc;AACZb,QAAAA,SAAS,EAAEiC,YAAY,CAAC,CAAD,CAAZ,CAAgBH,KADf;AAEZ/B,QAAAA,gBAAgB,EAAEkC,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,YAFtB;AAGZ/B,QAAAA,eAAe,EAAEmC,YAAY,CAAC,CAAD,CAAZ,CAAgBL,WAHrB;AAIZ/B,QAAAA,gBAAgB,EAAEoC,YAAY,CAAC,CAAD,CAAZ,CAAgBN,YAJtB;AAKZ1B,QAAAA,MAAM,EAAE,IALI;AAMZmC,QAAAA,cAAc,EAAEH,YAAY,CAAC,CAAD,CAAZ,CAAgB9B;AANpB,OAAd;AAQD,KA9E0C;;AAAA,SAgF3CkC,YAhF2C,GAgF5BtB,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACM,cAAF;AADkB,2BAQd,KAAK3B,KARS;AAAA,YAGhBG,gBAHgB,gBAGhBA,gBAHgB;AAAA,YAIhBC,eAJgB,gBAIhBA,eAJgB;AAAA,YAKhBC,gBALgB,gBAKhBA,gBALgB;AAAA,YAMhBC,SANgB,gBAMhBA,SANgB;AAAA,YAOhBoC,cAPgB,gBAOhBA,cAPgB;AASlB,YAAMhC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,YAAMgB,IAAI,GAAG,IAAb;AACAf,MAAAA,KAAK,yCAAkC6B,cAAlC,GAAoD;AACvDb,QAAAA,MAAM,EAAE,KAD+C;AAEvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,YAAY,EAAE9B,gBADK;AAEnB+B,UAAAA,WAAW,EAAE9B,eAFM;AAGnB+B,UAAAA,YAAY,EAAE9B,gBAHK;AAInB+B,UAAAA,KAAK,EAAE9B;AAJY,SAAf,CAFiD;AAQvDQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL,KAAjB;AAAwB,0BAAgB;AAAxC;AAR8C,OAApD,CAAL,CAUGM,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAWQ,UAASC,GAAT,EAAc;AAClBW,QAAAA,IAAI,CAACT,QAAL,CAAc;AACZhB,UAAAA,gBAAgB,EAAE,EADN;AAEZC,UAAAA,eAAe,EAAE,EAFL;AAGZC,UAAAA,gBAAgB,EAAE,EAHN;AAIZC,UAAAA,SAAS,EAAE,EAJC;AAKZC,UAAAA,MAAM,EAAE;AALI,SAAd;AAOAqB,QAAAA,IAAI,CAACpB,iBAAL,CAAuBS,GAAG,CAAC2B,QAA3B;AACD,OApBH;AAqBD,KAhH0C;;AAAA,SAkH3CC,YAlH2C,GAkH5B,CAACxB,CAAD,EAAIZ,EAAJ,KAAW;AACxBY,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAC,MAAAA,KAAK,yCAAkCJ,EAAlC,GAAwC;AAC3CoB,QAAAA,MAAM,EAAE,QADmC;AAE3Cf,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEL,KAAjB;AAAwB,0BAAgB;AAAxC;AAFkC,OAAxC,CAAL,CAIGM,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQC,GAAG,IAAI,CAAE,CALjB;AAMA6B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KA5H0C;;AAAA,SA8H3CC,YA9H2C,GA8H5B,MAAM;AACnB,WAAK9B,QAAL,CAAc;AACZb,QAAAA,SAAS,EAAE,EADC;AAEZD,QAAAA,gBAAgB,EAAE,EAFN;AAGZD,QAAAA,eAAe,EAAE,EAHL;AAIZD,QAAAA,gBAAgB,EAAE,EAJN;AAKZI,QAAAA,MAAM,EAAE;AALI,OAAd;AAOD,KAtI0C;AAAA;;AAU3C2C,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG,KAAKzB,KAAL,CAAWjB,EAA3B;AACA,SAAKD,iBAAL,CAAuB2C,OAAvB;AACD;;AA0HDC,EAAAA,MAAM,GAAG;AAAA,wBACiE,KAAK1B,KADtE;AAAA,UACCH,IADD,eACCA,IADD;AAAA,UACO8B,QADP,eACOA,QADP;AAAA,UACiBnB,WADjB,eACiBA,WADjB;AAAA,UAC8BzB,EAD9B,eAC8BA,EAD9B;AAAA,UACkCsC,QADlC,eACkCA,QADlC;AAAA,UAC4CO,MAD5C,eAC4CA,MAD5C;AAAA,UACoDC,QADpD,eACoDA,QADpD;AAAA,yBAE4E,KAAKvD,KAFjF;AAAA,UAECG,gBAFD,gBAECA,gBAFD;AAAA,UAEmBC,eAFnB,gBAEmBA,eAFnB;AAAA,UAEoCC,gBAFpC,gBAEoCA,gBAFpC;AAAA,UAEsDC,SAFtD,gBAEsDA,SAFtD;AAAA,UAEiEC,MAFjE,gBAEiEA,MAFjE;AAAA,UAGCN,KAHD,GAGW,KAAKD,KAHhB,CAGCC,KAHD;AAKP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AAhJ0C","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Event extends Component {\n  state = {\n    event: {},\n    tickets: [],\n    new_ticket_class: \"\",\n    new_description: \"\",\n    new_availability: \"\",\n    new_price: \"\",\n    update: false\n  };\n  componentDidMount() {\n    const eventId = this.props.id;\n    this.fetchAllEventInfo(eventId);\n  }\n\n  fetchAllEventInfo = id => {\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/events/${id}`, {\n      headers: { Authorization: token }\n    })\n      .then(res => res.json())\n      .then(res => {\n        // console.log(res);\n        this.setState({\n          event: res.event\n        });\n      });\n  };\n\n  handlechange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addNew = e => {\n    const { id } = this.props;\n    e.preventDefault();\n    const {\n      new_ticket_class,\n      new_description,\n      new_availability,\n      new_price\n    } = this.state;\n    const token = localStorage.getItem(\"access_token\");\n    const self = this;\n    fetch(`http://localhost:3000/events/${id}/tickets`, {\n      method: \"post\",\n      body: JSON.stringify({\n        ticket_class: new_ticket_class,\n        description: new_description,\n        availability: new_availability,\n        price: new_price\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(response) {\n        self.setState({\n          new_ticket_class: \"\",\n          new_description: \"\",\n          new_availability: \"\",\n          new_price: \"\"\n        });\n        self.fetchAllEventInfo(id);\n      });\n  };\n\n  updateState = (e, id) => {\n    e.preventDefault();\n    const { event } = this.state;\n    const filterResult = event.tickets.filter(ticket => ticket.id === id);\n    this.setState({\n      new_price: filterResult[0].price,\n      new_availability: filterResult[0].availability,\n      new_description: filterResult[0].description,\n      new_ticket_class: filterResult[0].ticket_class,\n      update: true,\n      updateTicketId: filterResult[0].id\n    });\n  };\n\n  updateTicket = e => {\n    e.preventDefault();\n    const {\n      new_ticket_class,\n      new_description,\n      new_availability,\n      new_price,\n      updateTicketId\n    } = this.state;\n    const token = localStorage.getItem(\"access_token\");\n    const self = this;\n    fetch(`http://localhost:3000/tickets/${updateTicketId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        ticket_class: new_ticket_class,\n        description: new_description,\n        availability: new_availability,\n        price: new_price\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(res) {\n        self.setState({\n          new_ticket_class: \"\",\n          new_description: \"\",\n          new_availability: \"\",\n          new_price: \"\",\n          update: false\n        });\n        self.fetchAllEventInfo(res.event_id);\n      });\n  };\n\n  deleteTicket = (e, id) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/tickets/${id}`, {\n      method: \"DELETE\",\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(res => {});\n    window.location.reload();\n  };\n\n  cancelUpdate = () => {\n    this.setState({\n      new_price: \"\",\n      new_availability: \"\",\n      new_description: \"\",\n      new_ticket_class: \"\",\n      update: false\n    });\n  };\n  render() {\n    const { name, imageurl, description, id, location, isEdit, datetime } = this.props;\n    const { new_ticket_class, new_description, new_availability, new_price, update } = this.state;\n    const { event } = this.state;\n\n    return (\n      <div>Hi</div>\n      \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}