{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/home.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\"; // import EventDetail from \"./eventDetail\";\n\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      search: \"\"\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      localStorage.removeItem(\"access_token\");\n      this.props.history.push(\"/login\");\n    };\n\n    this.getFilteredEvents = () => {\n      debugger;\n      const filter = this.state.search;\n      fetch(\"http://localhost:3000/filtered-events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          filter\n        })\n      }).then(resp => resp.json()).then(resp => console.log(resp));\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      fetch(\"http://localhost:3000/get-all-events\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(data => this.setState({\n        events: [...data]\n      }));\n    }\n  } // logout = e => {\n  //   e.preventDefault();\n  //   this.props.history.push(\"/login\");\n  // };\n\n\n  updateSearch(e) {\n    this.setState({\n      search: e.target.value\n    });\n  }\n\n  render() {\n    let searchedTerm = this.state.search; // let filteredEvents = this.state.events.filter(event => {\n    // return (\n    // event.name\n    //   .toLocaleLowerCase()\n    //   .indexOf(this.state.search.toLocaleLowerCase()) !== -1\n    // );\n    // });\n\n    const events = this.state.events;\n    const all = events.map((event, key) => React.createElement(Event, {\n      name: event.name,\n      location: event.location,\n      description: event.description,\n      id: event.id,\n      imageurl: event.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" All Events\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: e => this.updateSearch(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.getFilteredEvents(searchedTerm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Search\"), all));\n  }\n\n}","map":{"version":3,"sources":["/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/home.js"],"names":["React","Component","Navbar","Event","Home","state","events","search","logout","e","preventDefault","localStorage","removeItem","props","history","push","getFilteredEvents","filter","fetch","method","headers","body","JSON","stringify","then","resp","json","console","log","componentDidMount","token","getItem","Authorization","res","data","setState","updateSearch","target","value","render","searchedTerm","all","map","event","key","name","location","description","id","image_url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\n// import EventDetail from \"./eventDetail\";\n\nexport default class Home extends Component {\n  state = {\n    events: [],\n    search: \"\"\n  };\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      fetch(\"http://localhost:3000/get-all-events\", {\n        headers: { Authorization: token }\n      })\n        .then(res => res.json())\n        .then(data => this.setState({ events: [...data] }));\n    }\n    \n  }\n\n  // logout = e => {\n  //   e.preventDefault();\n  //   this.props.history.push(\"/login\");\n  // };\n\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"access_token\");\n    this.props.history.push(\"/login\");\n  };\n\n  updateSearch(e) {\n    this.setState({ search: e.target.value });\n  }\n\n  getFilteredEvents = () => {\n    debugger;\n    const filter = this.state.search;\n    fetch(\"http://localhost:3000/filtered-events\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ filter })\n    })\n      .then(resp => resp.json())\n      .then(resp => console.log(resp));\n  };\n\n  render() {\n    let searchedTerm = this.state.search;\n    // let filteredEvents = this.state.events.filter(event => {\n    // return (\n    // event.name\n    //   .toLocaleLowerCase()\n    //   .indexOf(this.state.search.toLocaleLowerCase()) !== -1\n    // );\n    // });\n    const { events } = this.state;\n    const all = events.map((event, key) => (\n      <Event\n        name={event.name}\n        location={event.location}\n        description={event.description}\n        id={event.id}\n        imageurl={event.image_url}\n      />\n    ));\n\n    return (\n      <div>\n        <Navbar logout={this.logout} />\n        <br />\n        <br />\n        <br />\n        <div className=\"container\">\n          <h3> All Events</h3>\n          <input\n            type=\"text\"\n            value={this.state.search}\n            onChange={e => this.updateSearch(e)}\n          />\n          <button onClick={() => this.getFilteredEvents(searchedTerm)}>\n            Search\n          </button>\n          {all}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}