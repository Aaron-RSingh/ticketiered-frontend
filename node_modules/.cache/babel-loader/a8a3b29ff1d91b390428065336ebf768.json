{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/profile.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\nexport default class Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n      date_time: \"\",\n      location: \"\",\n      update: false,\n      user: {},\n      ticketCounter: 0,\n      tickets: {},\n      ticketInfo: [],\n      eventsToggle: true,\n      selectedTab: \"created\"\n    };\n\n    this.fetchMyEvents = () => {\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          events: res\n        }, () => {\n          this.getUserInfo();\n        });\n      });\n    };\n\n    this.handlechange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getUserInfo = () => {\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/user-info\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          user: res\n        }, () => {\n          this.getUsertickets();\n        });\n      });\n    };\n\n    this.createNewEvent = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            description = _this$state.description,\n            date_time = _this$state.date_time,\n            location = _this$state.location,\n            image_url = _this$state.image_url;\n      console.log(name, description, date_time, location, image_url);\n      const token = localStorage.getItem(\"access_token\");\n      console.log(token);\n      const self = this;\n      fetch(\"http://localhost:3000/events\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          location: location,\n          date_time: date_time,\n          image_url: image_url\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\"\n        });\n        self.fetchMyEvents();\n      });\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      localStorage.removeItem(\"access_token\");\n      this.props.history.push(\"/login\");\n    };\n\n    this.deleteEvent = (e, id) => {\n      console.log(\"12\");\n      e.preventDefault();\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(res => {});\n      window.location.reload();\n    };\n\n    this.updateState = (e, id) => {\n      const events = this.state.events;\n      console.log(events);\n      const filterEvent = events.filter(event => event.id === id);\n      const updateEvent = filterEvent[0];\n      this.setState({\n        name: updateEvent.name,\n        location: updateEvent.location,\n        description: updateEvent.description,\n        image_url: updateEvent.image_url,\n        date_time: updateEvent.date_time,\n        update: true,\n        updateEventId: id\n      });\n    };\n\n    this.updateEvent = e => {\n      e.preventDefault();\n      const self = this;\n      const _this$state2 = this.state,\n            name = _this$state2.name,\n            location = _this$state2.location,\n            description = _this$state2.description,\n            image_url = _this$state2.image_url,\n            date_time = _this$state2.date_time,\n            updateEventId = _this$state2.updateEventId;\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events/\".concat(updateEventId), {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          location: location,\n          date_time: date_time,\n          image_url: image_url\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\",\n          update: false\n        });\n        self.fetchMyEvents();\n      });\n    };\n\n    this.cancelUpdate = () => {\n      this.setState({\n        name: \"\",\n        description: \"\",\n        image_url: \"\",\n        date_time: \"\",\n        location: \"\",\n        update: false\n      });\n    };\n\n    this.getUsertickets = () => {\n      const id = this.state.user.id;\n      fetch(\"http://localhost:3000/users/\".concat(id)).then(resp => resp.json()).then(resp => {\n        this.setState({\n          ticketInfo: resp.event.complete_user.tickets\n        });\n      }); // .then(() => console.log(this.state));\n    };\n\n    this.attendEvents = (selectedTab, ticketInfo) => {\n      // const {param} = this.state.selectTab;\n      switch (selectedTab) {\n        case \"created\":\n          return React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, \"My events\"), myEvents.length ? myEvents : React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, \"No events yet\")), React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, !update ? React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \"Create An Event!\") : React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \"Update form\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: name,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Location\",\n            name: \"location\",\n            value: location,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Time-date\",\n            name: \"date_time\",\n            value: date_time,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Description\",\n            name: \"description\",\n            value: description,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Image Url\",\n            name: \"image_url\",\n            value: image_url,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          })), !update ? React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            onClick: this.createNewEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, \"Create\") : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            style: {\n              margin: \"1rem\"\n            },\n            onClick: this.updateEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, \"Update\"), React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            onClick: this.cancelUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, \"cancel\")))), React.createElement(\"div\", {\n            className: \"col-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          })))));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299\n            },\n            __self: this\n          }, \"Bye\"); // console.log(ticketInfo)\n\n          {\n            /* <div></div> */\n          }\n      }\n    };\n\n    this.renderMyEvents = () => {\n      console.log(\"my events\");\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      this.fetchMyEvents();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Welcome! \", user && user.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, user && user.primary_location), React.createElement(\"button\", {\n      onClick: this.renderMyEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Hosted Events\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.attendEvents(selectedTab, ticketInfo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Attendee Events\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, this.attendEvents())));\n  }\n\n}","map":{"version":3,"sources":["/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/profile.js"],"names":["React","Component","Navbar","Event","Profile","state","events","name","description","image_url","date_time","location","update","user","ticketCounter","tickets","ticketInfo","eventsToggle","selectedTab","fetchMyEvents","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","setState","getUserInfo","handlechange","e","target","value","getUsertickets","createNewEvent","preventDefault","console","log","self","method","body","JSON","stringify","response","logout","removeItem","props","history","push","deleteEvent","id","window","reload","updateState","filterEvent","filter","event","updateEvent","updateEventId","cancelUpdate","resp","complete_user","attendEvents","myEvents","length","margin","renderMyEvents","componentDidMount","render","username","primary_location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\n\nexport default class Profile extends Component {\n  state = {\n    events: [],\n    name: \"\",\n    description: \"\",\n    image_url: \"\",\n    date_time: \"\",\n    location: \"\",\n    update: false,\n    user: {},\n    ticketCounter: 0,\n    tickets: {},\n    ticketInfo: [],\n    eventsToggle: true,\n    selectedTab: \"created\"\n  };\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      this.fetchMyEvents();\n    }\n  }\n\n  fetchMyEvents = () => {\n    const token = localStorage.getItem(\"access_token\");\n\n    fetch(\"http://localhost:3000/events\", { headers: { Authorization: token } })\n      .then(res => res.json())\n      .then(res => {\n        this.setState(\n          {\n            events: res\n          },\n          () => {\n            this.getUserInfo();\n          }\n        );\n      });\n  };\n\n  handlechange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  getUserInfo = () => {\n    const token = localStorage.getItem(\"access_token\");\n    fetch(\"http://localhost:3000/user-info\", {\n      headers: { Authorization: token }\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.setState(\n          {\n            user: res\n          },\n          () => {\n            this.getUsertickets();\n          }\n        );\n      });\n  };\n\n  createNewEvent = e => {\n    e.preventDefault();\n    const { name, description, date_time, location, image_url } = this.state;\n    console.log(name, description, date_time, location, image_url);\n    const token = localStorage.getItem(\"access_token\");\n    console.log(token);\n    const self = this;\n    fetch(\"http://localhost:3000/events\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        location: location,\n        date_time: date_time,\n        image_url: image_url\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\"\n        });\n        self.fetchMyEvents();\n      });\n  };\n\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"access_token\");\n    this.props.history.push(\"/login\");\n  };\n\n  deleteEvent = (e, id) => {\n    console.log(\"12\");\n    e.preventDefault();\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/events/${id}`, {\n      method: \"DELETE\",\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(res => {});\n    window.location.reload();\n  };\n\n  updateState = (e, id) => {\n    const { events } = this.state;\n    console.log(events);\n    const filterEvent = events.filter(event => event.id === id);\n    const updateEvent = filterEvent[0];\n    this.setState({\n      name: updateEvent.name,\n      location: updateEvent.location,\n      description: updateEvent.description,\n      image_url: updateEvent.image_url,\n      date_time: updateEvent.date_time,\n      update: true,\n      updateEventId: id\n    });\n  };\n\n  updateEvent = e => {\n    e.preventDefault();\n    const self = this;\n    const {\n      name,\n      location,\n      description,\n      image_url,\n      date_time,\n      updateEventId\n    } = this.state;\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/events/${updateEventId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        location: location,\n        date_time: date_time,\n        image_url: image_url\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\",\n          update: false\n        });\n        self.fetchMyEvents();\n      });\n  };\n\n  cancelUpdate = () => {\n    this.setState({\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n      date_time: \"\",\n      location: \"\",\n      update: false\n    });\n  };\n\n  getUsertickets = () => {\n    const id = this.state.user.id;\n    fetch(`http://localhost:3000/users/${id}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        this.setState({\n          ticketInfo: resp.event.complete_user.tickets\n        });\n      })\n      // .then(() => console.log(this.state));\n  };\n\n  attendEvents = (selectedTab, ticketInfo) => {\n    // const {param} = this.state.selectTab;\n    \n    switch (selectedTab) {\n      case \"created\":\n        return <div className=\"row\">\n        <div className=\"col\">\n          <h2>My events</h2>\n          {myEvents.length ? myEvents : <h5>No events yet</h5>}\n        </div>\n        <div className=\"col\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                {!update ? <h3>Create An Event!</h3> : <h3>Update form</h3>}\n                <br />\n                <form>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={name}\n                      onChange={this.handlechange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Location\"\n                      name=\"location\"\n                      value={location}\n                      onChange={this.handlechange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Time-date\"\n                      name=\"date_time\"\n                      value={date_time}\n                      onChange={this.handlechange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Description\"\n                      name=\"description\"\n                      value={description}\n                      onChange={this.handlechange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Image Url\"\n                      name=\"image_url\"\n                      value={image_url}\n                      onChange={this.handlechange}\n                    />\n                  </div>\n                  {!update ? (\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={this.createNewEvent}\n                    >\n                      Create\n                    </button>\n                  ) : (\n                    <span>\n                      <button\n                        className=\"btn btn-outline-success\"\n                        style={{ margin: \"1rem\" }}\n                        onClick={this.updateEvent}\n                      >\n                        Update\n                      </button>\n                      <button\n                        className=\"btn btn-outline-success\"\n                        onClick={this.cancelUpdate}\n                      >\n                        cancel\n                      </button>\n                    </span>\n                  )}\n                </form>\n              </div>\n              <div className=\"col-sm\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      default:\n        return  <div>Bye</div>\n        // console.log(ticketInfo)\n        {/* <div></div> */}\n    }\n  };\n\n  renderMyEvents = () => {\n    console.log(\"my events\");\n  };\n\n  render() {\n    \n\n    return (\n      <div>\n        <Navbar logout={this.logout} />\n        <br />\n        <br />\n        <div className=\"container\">\n          <h2>Welcome! {user && user.username}</h2>\n          <p>{user && user.primary_location}</p>\n          <button onClick={this.renderMyEvents}>Hosted Events</button>\n          <button\n            onClick={() => {\n              this.attendEvents(selectedTab, ticketInfo);\n            }}\n          >\n\n            Attendee Events\n          </button>\n          <hr />\n          <br />\n          <br />\n          <div className=\"row\">\n            {/* <div className=\"col\"> */}\n\n            {/* <h4>What events am I going to already?</h4> */}\n\n            {/* </div> */}\n          </div>\n          <div>\n            {this.attendEvents()}\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}