{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/profile.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\nimport Ticket from \"./ticket\";\nimport EventForm from \"./eventForm\";\nexport default class Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n      date_time: \"\",\n      location: \"\",\n      update: false,\n      user: {},\n      ticketCounter: 0,\n      tickets: {},\n      ticketInfo: [],\n      eventsToggle: true,\n      selectedTab: \"created\"\n    };\n\n    this.fetchMyEvents = () => {\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          events: res\n        }, () => {\n          this.getUserInfo();\n        });\n      });\n    };\n\n    this.handlechange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getUserInfo = () => {\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/user-info\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          user: res\n        }, () => {\n          this.getUsertickets();\n        });\n      });\n    };\n\n    this.createNewEvent = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            description = _this$state.description,\n            date_time = _this$state.date_time,\n            location = _this$state.location,\n            image_url = _this$state.image_url;\n      console.log(name, description, date_time, location, image_url);\n      const token = localStorage.getItem(\"access_token\");\n      console.log(token);\n      const self = this;\n      fetch(\"http://localhost:3000/events\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          location: location,\n          date_time: date_time,\n          image_url: image_url\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\"\n        });\n        self.fetchMyEvents(); // this.props.history.push(\"/profile\")\n      });\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      localStorage.removeItem(\"access_token\");\n      this.props.history.push(\"/login\");\n    };\n\n    this.deleteEvent = (e, id) => {\n      console.log(\"12\");\n      e.preventDefault();\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(res => {});\n      window.location.reload();\n    };\n\n    this.updateState = (e, id) => {\n      const events = this.state.events;\n      console.log(events);\n      const filterEvent = events.filter(event => event.id === id);\n      const updateEvent = filterEvent[0];\n      this.setState({\n        name: updateEvent.name,\n        location: updateEvent.location,\n        description: updateEvent.description,\n        image_url: updateEvent.image_url,\n        date_time: updateEvent.date_time,\n        update: true,\n        updateEventId: id\n      });\n    };\n\n    this.updateEvent = e => {\n      e.preventDefault();\n      const self = this;\n      const _this$state2 = this.state,\n            name = _this$state2.name,\n            location = _this$state2.location,\n            description = _this$state2.description,\n            image_url = _this$state2.image_url,\n            date_time = _this$state2.date_time,\n            updateEventId = _this$state2.updateEventId;\n      const token = localStorage.getItem(\"access_token\");\n      fetch(\"http://localhost:3000/events/\".concat(updateEventId), {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name: name,\n          description: description,\n          location: location,\n          date_time: date_time,\n          image_url: image_url\n        }),\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(function (response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\",\n          update: false\n        });\n        self.fetchMyEvents();\n      });\n    };\n\n    this.cancelUpdate = () => {\n      this.setState({\n        name: \"\",\n        description: \"\",\n        image_url: \"\",\n        date_time: \"\",\n        location: \"\",\n        update: false\n      });\n    };\n\n    this.getUsertickets = () => {\n      const id = this.state.user.id;\n      fetch(\"http://localhost:3000/users/\".concat(id)).then(resp => resp.json()).then(resp => {\n        this.setState({\n          ticketInfo: resp.event.complete_user.tickets\n        });\n      });\n    };\n\n    this.displayedEvents = () => {\n      const _this$state3 = this.state,\n            events = _this$state3.events,\n            name = _this$state3.name,\n            description = _this$state3.description,\n            date_time = _this$state3.date_time,\n            location = _this$state3.location,\n            image_url = _this$state3.image_url,\n            update = _this$state3.update,\n            ticketInfo = _this$state3.ticketInfo,\n            selectedTab = _this$state3.selectedTab;\n      let myEvents = [];\n      myEvents = events.map((event, key) => React.createElement(React.Fragment, null, React.createElement(Event, {\n        name: event.name,\n        location: event.location,\n        description: event.description,\n        datetime: event.date_time,\n        id: event.id,\n        isEdit: true,\n        deleteEvent: this.deleteEvent,\n        updateState: this.updateState,\n        imageurl: this.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })));\n      let attendingEvents = [];\n      attendingEvents = ticketInfo.map(ticket => React.createElement(React.Fragment, null, React.createElement(Ticket, {\n        ticket_class: ticket.class,\n        description: ticket.description,\n        event_id: ticket.event_id,\n        price: ticket.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })));\n      let eventForm = [];\n      eventForm = ticketInfo.map(ticket => React.createElement(React.Fragment, null, React.createElement(EventForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })));\n\n      switch (selectedTab) {\n        case \"created\":\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, myEvents);\n\n        case \"attending\":\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }, attendingEvents);\n\n        case \"form\":\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: name,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Location\",\n            name: \"location\",\n            value: location,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Time-date\",\n            name: \"date_time\",\n            value: date_time,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Description\",\n            name: \"description\",\n            value: description,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Image Url\",\n            name: \"image_url\",\n            value: image_url,\n            onChange: this.handlechange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          })), !update ? React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            onClick: this.createNewEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, \"Create\") : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            style: {\n              margin: \"1rem\"\n            },\n            onClick: this.updateEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }, \"Update\"), React.createElement(\"button\", {\n            className: \"btn btn-outline-success\",\n            onClick: this.cancelUpdate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }, \"cancel\"))));\n\n        default:\n          return console.log(\"not worked\");\n      }\n    };\n\n    this.renderMyEvents = () => {\n      this.setState({\n        selectedTab: \"created\"\n      });\n      console.log(this.state.selectedTab);\n      this.changedHostedButton;\n    };\n\n    this.renderAttendingEvents = () => {\n      this.setState({\n        selectedTab: \"attending\"\n      });\n      console.log(this.state.selectedTab);\n      this.changeAttendingButton();\n    };\n\n    this.renderEventForm = e => {\n      this.setState({\n        selectedTab: \"form\"\n      });\n      console.log(this.state.selectedTab);\n      this.changeFormButton();\n    };\n\n    this.changeHostedButton = () => {\n      console.log(this.state.selectedTab);\n      const myColour = this.state.selectedTab === \"created\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\";\n      return myColour;\n    };\n\n    this.changeAttendingButton = () => {\n      console.log(this.state.selectedTab);\n      const myColour = this.state.selectedTab === \"attending\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\";\n      return myColour;\n    };\n\n    this.changeFormButton = () => {\n      console.log(this.state.selectedTab);\n      const myColour = this.state.selectedTab === \"form\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\";\n      return myColour;\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      this.fetchMyEvents();\n    }\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          name = _this$state4.name,\n          location = _this$state4.location,\n          user = _this$state4.user,\n          events = _this$state4.events,\n          update = _this$state4.update,\n          date_time = _this$state4.date_time,\n          description = _this$state4.description,\n          image_url = _this$state4.image_url,\n          selectedTab = _this$state4.selectedTab;\n    let myEvents = [];\n    myEvents = events.map(event => React.createElement(React.Fragment, null, React.createElement(Event, {\n      name: event.name,\n      location: event.location,\n      description: event.description,\n      datetime: event.date_time,\n      id: event.id,\n      isEdit: true,\n      deleteEvent: this.deleteEvent,\n      updateState: this.updateState,\n      imageurl: this.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Welcome! \", user && user.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, user && user.primary_location), React.createElement(\"button\", {\n      className: this.state.selectedTab === \"created\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\",\n      onClick: this.renderMyEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, \"Hosted Events\"), React.createElement(\"button\", {\n      className: this.state.selectedTab === \"attending\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\",\n      onClick: this.renderAttendingEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"My Tickets\"), React.createElement(\"button\", {\n      className: this.state.selectedTab === \"form\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\",\n      onClick: e => {\n        this.renderEventForm(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Create Event\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }), this.displayedEvents(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    })));\n  }\n\n} // {this.state.selectedTab === \"attending\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\"}","map":{"version":3,"sources":["/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/profile.js"],"names":["React","Component","Navbar","Event","Ticket","EventForm","Profile","state","events","name","description","image_url","date_time","location","update","user","ticketCounter","tickets","ticketInfo","eventsToggle","selectedTab","fetchMyEvents","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","setState","getUserInfo","handlechange","e","target","value","getUsertickets","createNewEvent","preventDefault","console","log","self","method","body","JSON","stringify","response","logout","removeItem","props","history","push","deleteEvent","id","window","reload","updateState","filterEvent","filter","event","updateEvent","updateEventId","cancelUpdate","resp","complete_user","displayedEvents","myEvents","map","key","attendingEvents","ticket","class","event_id","price","eventForm","margin","renderMyEvents","changedHostedButton","renderAttendingEvents","changeAttendingButton","renderEventForm","changeFormButton","changeHostedButton","myColour","componentDidMount","render","username","primary_location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\nimport Ticket from \"./ticket\";\nimport EventForm from \"./eventForm\";\n\nexport default class Profile extends Component {\n  state = {\n    events: [],\n    name: \"\",\n    description: \"\",\n    image_url: \"\",\n    date_time: \"\",\n    location: \"\",\n    update: false,\n    user: {},\n    ticketCounter: 0,\n    tickets: {},\n    ticketInfo: [],\n    eventsToggle: true,\n    selectedTab: \"created\"\n  };\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      this.fetchMyEvents();\n    }\n  }\n\n  fetchMyEvents = () => {\n    const token = localStorage.getItem(\"access_token\");\n\n    fetch(\"http://localhost:3000/events\", { headers: { Authorization: token } })\n      .then(res => res.json())\n      .then(res => {\n        this.setState(\n          {\n            events: res\n          },\n          () => {\n            this.getUserInfo();\n          }\n        );\n      });\n  };\n\n  handlechange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  getUserInfo = () => {\n    const token = localStorage.getItem(\"access_token\");\n    fetch(\"http://localhost:3000/user-info\", {\n      headers: { Authorization: token }\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.setState(\n          {\n            user: res\n          },\n          () => {\n            this.getUsertickets();\n          }\n        );\n      });\n  };\n\n  createNewEvent = e => {\n    e.preventDefault();\n    const { name, description, date_time, location, image_url } = this.state;\n    console.log(name, description, date_time, location, image_url);\n    const token = localStorage.getItem(\"access_token\");\n    console.log(token);\n    const self = this;\n    fetch(\"http://localhost:3000/events\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        location: location,\n        date_time: date_time,\n        image_url: image_url\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\"\n        });\n        self.fetchMyEvents();\n        // this.props.history.push(\"/profile\")\n      });\n  };\n\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"access_token\");\n    this.props.history.push(\"/login\");\n  };\n\n  deleteEvent = (e, id) => {\n    console.log(\"12\");\n    e.preventDefault();\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/events/${id}`, {\n      method: \"DELETE\",\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(res => {});\n    window.location.reload();\n  };\n\n  updateState = (e, id) => {\n    const { events } = this.state;\n    console.log(events);\n    const filterEvent = events.filter(event => event.id === id);\n    const updateEvent = filterEvent[0];\n    this.setState({\n      name: updateEvent.name,\n      location: updateEvent.location,\n      description: updateEvent.description,\n      image_url: updateEvent.image_url,\n      date_time: updateEvent.date_time,\n      update: true,\n      updateEventId: id\n    });\n  };\n\n  updateEvent = e => {\n    e.preventDefault();\n    const self = this;\n    const {\n      name,\n      location,\n      description,\n      image_url,\n      date_time,\n      updateEventId\n    } = this.state;\n    const token = localStorage.getItem(\"access_token\");\n    fetch(`http://localhost:3000/events/${updateEventId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        location: location,\n        date_time: date_time,\n        image_url: image_url\n      }),\n      headers: { Authorization: token, \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(function(response) {\n        self.setState({\n          name: \"\",\n          description: \"\",\n          image_url: \"\",\n          date_time: \"\",\n          location: \"\",\n          update: false\n        });\n        self.fetchMyEvents();\n      });\n  };\n\n  cancelUpdate = () => {\n    this.setState({\n      name: \"\",\n      description: \"\",\n      image_url: \"\",\n      date_time: \"\",\n      location: \"\",\n      update: false\n    });\n  };\n\n  getUsertickets = () => {\n    const id = this.state.user.id;\n    fetch(`http://localhost:3000/users/${id}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        this.setState({\n          ticketInfo: resp.event.complete_user.tickets\n        });\n      });\n  };\n\n  displayedEvents = () => {\n    const {\n      events,\n      name,\n      description,\n      date_time,\n      location,\n      image_url,\n      update,\n      // user,\n      ticketInfo,\n      selectedTab\n    } = this.state;\n\n    let myEvents = [];\n    myEvents = events.map((event, key) => (\n      <>\n        <Event\n          name={event.name}\n          location={event.location}\n          description={event.description}\n          datetime={event.date_time}\n          id={event.id}\n          isEdit={true}\n          deleteEvent={this.deleteEvent}\n          updateState={this.updateState}\n          imageurl={this.image_url}\n        />\n        <br />\n      </>\n    ));\n\n    let attendingEvents = [];\n    attendingEvents = ticketInfo.map(ticket => (\n      <>\n        <Ticket\n          ticket_class={ticket.class}\n          description={ticket.description}\n          event_id={ticket.event_id}\n          price={ticket.price}\n        />\n        <br />\n      </>\n    ));\n\n    let eventForm = [];\n    eventForm = ticketInfo.map(ticket => (\n      <>\n        <EventForm />\n        <br />\n      </>\n    ));\n\n    switch (selectedTab) {\n      case \"created\":\n        return <div>{myEvents}</div>;\n      case \"attending\":\n        return <div>{attendingEvents}</div>;\n      case \"form\":\n        return (\n          <div>\n            <form>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={this.handlechange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Location\"\n                  name=\"location\"\n                  value={location}\n                  onChange={this.handlechange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Time-date\"\n                  name=\"date_time\"\n                  value={date_time}\n                  onChange={this.handlechange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={this.handlechange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Image Url\"\n                  name=\"image_url\"\n                  value={image_url}\n                  onChange={this.handlechange}\n                />\n              </div>\n              {!update ? (\n                <button\n                  className=\"btn btn-outline-success\"\n                  onClick={this.createNewEvent}\n                >\n                  Create\n                </button>\n              ) : (\n                <span>\n                  <button\n                    className=\"btn btn-outline-success\"\n                    style={{ margin: \"1rem\" }}\n                    onClick={this.updateEvent}\n                  >\n                    Update\n                  </button>\n                  <button\n                    className=\"btn btn-outline-success\"\n                    onClick={this.cancelUpdate}\n                  >\n                    cancel\n                  </button>\n                </span>\n              )}\n            </form>\n          </div>\n        );\n      default:\n        return console.log(\"not worked\");\n    }\n  };\n\n  renderMyEvents = () => {\n    this.setState({\n      selectedTab: \"created\"\n    });\n    console.log(this.state.selectedTab);\n    this.changedHostedButton;\n  };\n\n  renderAttendingEvents = () => {\n    this.setState({\n      selectedTab: \"attending\"\n    });\n    console.log(this.state.selectedTab);\n    this.changeAttendingButton();\n  };\n\n  renderEventForm = e => {\n    this.setState({\n      selectedTab: \"form\"\n    });\n    console.log(this.state.selectedTab);\n    this.changeFormButton();\n  };\n\n  changeHostedButton = () => {\n    console.log(this.state.selectedTab);\n    const myColour =\n      this.state.selectedTab === \"created\"\n        ? \"btn btn-outline-success\"\n        : \"btn btn-outline-success my-2 my-sm-0\";\n    return myColour;\n  };\n\n  changeAttendingButton = () => {\n    console.log(this.state.selectedTab);\n    const myColour =\n      this.state.selectedTab === \"attending\"\n        ? \"btn btn-outline-success\"\n        : \"btn btn-outline-success my-2 my-sm-0\";\n    return myColour;\n  };\n\n  changeFormButton = () => {\n    console.log(this.state.selectedTab);\n    const myColour =\n      this.state.selectedTab === \"form\"\n        ? \"btn btn-outline-success\"\n        : \"btn btn-outline-success my-2 my-sm-0\";\n    return myColour;\n  };\n\n  render() {\n    const {\n      name,\n      location,\n      user,\n      events,\n      update,\n      date_time,\n      description,\n      image_url,\n      selectedTab\n    } = this.state;\n\n    let myEvents = [];\n    myEvents = events.map(event => (\n      <>\n        <Event\n          name={event.name}\n          location={event.location}\n          description={event.description}\n          datetime={event.date_time}\n          id={event.id}\n          isEdit={true}\n          deleteEvent={this.deleteEvent}\n          updateState={this.updateState}\n          imageurl={this.image_url}\n        />\n        <br />\n      </>\n    ));\n\n    return (\n      <div>\n        <Navbar logout={this.logout} />\n        <br />\n        <br />\n        <div className=\"container\">\n          <h2>Welcome! {user && user.username}</h2>\n          <p>{user && user.primary_location}</p>\n          <button\n            className={\n              this.state.selectedTab === \"created\"\n                ? \"btn btn-outline-success\"\n                : \"btn btn-outline-success my-2 my-sm-0\"\n            }\n            onClick={this.renderMyEvents}\n          >\n            Hosted Events\n          </button>\n          <button\n            className={\n              this.state.selectedTab === \"attending\"\n                ? \"btn btn-outline-success\"\n                : \"btn btn-outline-success my-2 my-sm-0\"\n            }\n            onClick={this.renderAttendingEvents}\n          >\n            My Tickets\n          </button>\n          <button\n            className={\n              this.state.selectedTab === \"form\"\n                ? \"btn btn-outline-success\"\n                : \"btn btn-outline-success my-2 my-sm-0\"\n            }\n            onClick={e => {\n              this.renderEventForm(e);\n            }}\n          >\n            Create Event\n          </button>\n          <hr />\n          <br />\n          {this.displayedEvents()}\n          <br />\n          <div className=\"row\"></div>\n          {/* This is where I took out the untitled-1 file */}\n        </div>\n      </div>\n    );\n  }\n}\n\n// {this.state.selectedTab === \"attending\" ? \"btn btn-outline-success\" : \"btn btn-outline-success my-2 my-sm-0\"}\n"]},"metadata":{},"sourceType":"module"}