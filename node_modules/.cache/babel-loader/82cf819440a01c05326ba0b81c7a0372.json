{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/home.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\"; // import EventDetail from \"./eventDetail\";\n\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      search: \"\"\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      localStorage.removeItem(\"access_token\");\n      this.props.history.push(\"/login\");\n    };\n\n    this.getFilteredEvents = () => {\n      fetch(\"http://localhost:3000/filtered-events\", {\n        method: \"POST\",\n        headers: {\n          Authorization: token\n        },\n        body: JSON.stringify({})\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      fetch(\"http://localhost:3000/get-all-events\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(data => this.setState({\n        events: [...data]\n      }));\n    }\n  } // logout = e => {\n  //   e.preventDefault();\n  //   this.props.history.push(\"/login\");\n  // };\n\n\n  updateSearch(e) {\n    this.setState({\n      search: e.target.value\n    });\n  }\n\n  render() {\n    let filteredEvents = this.state.events.filter(event => {\n      return event.name.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1;\n    });\n    const events = this.state.events;\n    const all = filteredEvents.map((event, key) => React.createElement(Event, {\n      name: event.name,\n      location: event.location,\n      description: event.description,\n      id: event.id,\n      imageurl: event.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" All Events\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Search:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), all));\n  }\n\n}","map":{"version":3,"sources":["/Users/Aaron/final-project-ticketiered/ticketiered-frontend/src/components/home.js"],"names":["React","Component","Navbar","Event","Home","state","events","search","logout","e","preventDefault","localStorage","removeItem","props","history","push","getFilteredEvents","fetch","method","headers","Authorization","token","body","JSON","stringify","componentDidMount","getItem","then","res","json","data","setState","updateSearch","target","value","render","filteredEvents","filter","event","name","toLocaleLowerCase","indexOf","all","map","key","location","description","id","image_url","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Event from \"./event\";\n// import EventDetail from \"./eventDetail\";\n\nexport default class Home extends Component {\n  state = {\n    events: [],\n    search: \"\"\n  };\n  componentDidMount() {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      fetch(\"http://localhost:3000/get-all-events\", {\n        headers: { Authorization: token }\n      })\n        .then(res => res.json())\n        .then(data => this.setState({ events: [...data] }));\n    }\n  }\n\n  // logout = e => {\n  //   e.preventDefault();\n  //   this.props.history.push(\"/login\");\n  // };\n\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"access_token\");\n    this.props.history.push(\"/login\");\n  };\n\n  updateSearch(e) {\n    this.setState({ search: e.target.value });\n  }\n\n  getFilteredEvents = () => {\n    fetch(\"http://localhost:3000/filtered-events\", {\n      method: \"POST\",\n      headers: {Authorization: token},\n      body: JSON.stringify({})\n    })\n  }\n\n  render() {\n    let filteredEvents = this.state.events.filter(event => {\n      return (\n        event.name\n          .toLocaleLowerCase()\n          .indexOf(this.state.search.toLocaleLowerCase()) !== -1\n      );\n    });\n    const { events } = this.state;\n    const all = filteredEvents.map((event, key) => (\n      <Event\n        name={event.name}\n        location={event.location}\n        description={event.description}\n        id={event.id}\n        imageurl={event.image_url}\n      />\n    ));\n\n    return (\n      <div>\n        <Navbar logout={this.logout} />\n        <br />\n        <br />\n        <br />\n        <div className=\"container\">\n          <h3> All Events</h3>\n          <label>Search:</label>\n          <input\n            type=\"text\"\n            value={this.state.search}\n            onChange={this.updateSearch.bind(this)}\n          />\n          {all}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}